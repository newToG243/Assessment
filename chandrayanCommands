import java.util.Scanner;

class Pos {
    int x;//X coordinate
    int y;//Y coordinate
    int z;//Z coordinate

    Pos(int i, int j, int k) {
        x = i;
        y = j;
        z = k;
    }

}
class chandrayanCommands{
 static int[] findDirectionAndPosition(char input[], int n, int d, int[] direction,int m,int t,int o) {
   Pos start = new Pos(m, t, o);
   for(int i=0;i<n;i++){
   char c = input[i];

 if (c == 'f') {
if (d == 0) {
                    start.y++;
                } else if (d == 1) {
                    start.x++;
                } else if (d == 2) {
                    start.y++;
                } else if (d == 3) {
                    start.x--;
                } else if (d == 4) {
                    start.z++;
                } else if (d == 5) {
                    start.z--;
                }
 }
 else if (c == 'b'){if (d == 0) {
                    start.y--;
                } else if (d == 1) {
                    start.x--;
                } else if (d == 2) {
                    start.y--;
                } else if (d == 3) {
                    start.x++;
                } else if (d == 4) {
                    start.z--;
                } else if (d == 5) {
                    start.z++;
                }
 }
 else if (c == 'l') {
if (d < 4) {
                    if (d < 0) {
                        // Handle negative indices by wrapping around
                        d = (d +4)% 4;
                        d = direction[d];
                    } else {
                        d = (d - 1+4) % 4 ;
                        d = direction[d];
                    }
                } else {
                    if (d == 4) {
                        d = 0;// point towards north
                    } else if (d == 5) {
                        d = 2;// point towards south
                    }
                }
 }
  else if (c == 'r') {
if (d < 4) {
                    if (d < 0) {
                        // Handle negative indices by wrapping around
                        d = (d + 4)%4;
                        d = direction[d];
                    } else {
                        d = (d + 1)%4;
                        d = direction[d];
                    }
                } else {
                    if (d == 4) {
                        d = 2;//point towards south
                    } else if (d == 5) {
                        d = 0;//point towards north
                    }
                }
  }
else if (c == 'u') {
 d=4; 
}
 else if (c == 'd') {
d=5;
 }
// for returning answer we will make array to store (x,y,z,final direction)
        int arr[] = new int[4];
        arr[0] = start.x;
        arr[1] = start.y;
        arr[2] = start.z;
        arr[3] = d;

        return arr;
  
}
public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.println("How many test cases you want to run?...");
        int numberOfTestCases=sc.nextInt();

        while(numberOfTestCases>0){

        System.out.println("Enter 3 coordinates");
        
        System.out.println("X coordinate");
        int m=sc.nextInt();

        System.out.println("Y coordinate");
        int t=sc.nextInt();

        System.out.println("Z coordinate");
        int o=sc.nextInt();

        System.out.println("Number of array elements");
        int n = sc.nextInt();

        char input[] = new char[n];

        System.out.println("Enter elements(in lower case from {u,d,l,r,f,b})");
        // taking input in array
        for (int i = 0; i < n; i++) {
            input[i] = sc.next().charAt(0);
        }

        System.out.println("Give starting direction in lower case");
        char p = sc.next().charAt(0);// starting direction

       // we will consider direction as number
        // for N-0,E-1,S-2,W-3
        int direction[] = { 0, 1, 2, 3 };
        // we will consider U-4,D-5

        // converting starting direction into number d
        int d = 0;
        
            if (p == 'n')
                d = 0;
            else if (p == 'e')
                d = 1;
            else if (p == 'w')
                d = 2;
            else if (p == 's')
                d = 3;


       int ans[] = findDirectionAndPosition(input, n, d, direction,m,t,o);



        numberOfTestCases--;
        }
}
}
